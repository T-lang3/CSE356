services:
  nginx:
    image: nginx:latest
    container_name: nginx
    #ports:
      #- 443:443
      #- 80:80
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./python/media:/media
      - ./nginx/certs:/etc/letsencrypt
      - ./nginx/certs-data:/data/letsencrypt
    depends_on:
      - python
      - certbot
    network_mode: host

  mongo:
    image: mongo:latest
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: mongadmin
    #   MONGO_INITDB_ROOT_PASSWORD: LikeAndSubscribe
    # ports:
    #   - 27017:27017
    volumes:
      - ./mongo/db:/data/db
    container_name: mongodb
    network_mode: host

  python:
    build: ./python/
    container_name: python
    # ports:
    #   - 5000:5000
    depends_on:
      - mongo
      - postfix
    volumes:
      - ./python:/app
    
    #comment out python and uncomment tail
    # entrypoint: ["python", "main.py"]
    entrypoint: ["tail", "-f", "/dev/null"]
    network_mode: host

  postfix:
    image: boky/postfix
    container_name: postfix
    # ports:
    #   - 587:587
    environment:
      - ALLOWED_SENDER_DOMAINS=tim.cse356.compas.cs.stonybrook.edu
      - ALLOW_EMPTY_SENDER_DOMAINS=false
    network_mode: host

  # gorse:
  #   image: zhenghaoz/gorse-in-one
  #   container_name: gorse
  #   #Jack commented out the ports below
  #   #ports:
  #   #  - 8086:8086  # gRPC port
  #   #  - 8088:8088  # HTTP port
  #   environment:
  #     # Use Redis as cache storage backend (unchanged).
  #     GORSE_CACHE_STORE: mongodb://localhost:27017/gorse_cache
  #     # Use MongoDB as data storage backend.
  #     GORSE_DATA_STORE: mongodb://localhost:27017/gorse_data
  #   command: >
  #     --log-path /var/log/gorse/master.log
  #     --cache-path /var/lib/gorse/master_cache.data
  #   volumes:
  #     # Mount the configuration file.
  #     - ./gorse/config.toml:/etc/gorse/config.toml
  #   depends_on:
  #     - mongo
  #   network_mode: host

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379
    # environment:
    #   - REDIS_PASSWORD=66cfe2a89ba30e1a6c70680a
    command: ["redis-server"]

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/certs:/etc/letsencrypt
      - ./nginx/certs-data:/data/letsencrypt