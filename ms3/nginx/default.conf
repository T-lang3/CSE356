# upstream flask_app {
#     server 127.0.0.1:5000;  # Use localhost since both are using host networking
# }
# server {  
#     listen 80 default_server;  
#     root /var/www/html;  
#     server_name tim.cse356.compas.cs.stonybrook.edu;  
#     index index.html index.php;  
#     add_header X-CSE356 "66d3cdba07c8cc85484644a4";  
#     charset utf-8;  

#     # Main location block for all other requests
#     # location / {  
#     #     try_files $uri $uri/ =404;  
#     # }  
    
#     # Location for your Flask application
#     location / {
#         proxy_pass http://flask_app;  # Use the service name for Docker
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }

#     # PHP processing block
#     # location ~ \.php$ {  
#     #     fastcgi_split_path_info ^(.+.php)(/.+)$;  
#     #     fastcgi_pass php:9000;  
#     #     fastcgi_index index.php;  
#     #     include fastcgi_params;
#     #     fastcgi_read_timeout 300;
#     #     fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;  
#     #     fastcgi_intercept_errors off;  
#     #     fastcgi_buffer_size 16k;  
#     #     fastcgi_buffers 4 16k;  
#     # }  

#     # location ~ /\.ht {  
#     #     deny all;  
#     # }

#     location /media/ {
#             alias /media/;
#             # proxy_pass http://flask_app;  # Use the service name for Docker
#             # proxy_set_header Host $host;
#             # proxy_set_header X-Real-IP $remote_addr;
#             # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             # proxy_set_header X-Forwarded-Proto $scheme;
#             # add_header X-CSE356 "66d3cdba07c8cc85484644a4";    #if the header above doesn't work, uncomment this
#         }
    
    
#             # proxy_pass http://flask_app;  # Use the service name for Docker
#             # proxy_set_header Host $host;
#             # proxy_set_header X-Real-IP $remote_addr;
#             # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             # proxy_set_header X-Forwarded-Proto $scheme;
#             # add_header X-CSE356 "66d3cdba07c8cc85484644a4";    #if the header above doesn't work, uncomment this
        
    
#     location /p/ {
#             alias /usr/share/nginx/html/media/;
#             # proxy_pass http://flask_app;  # Use the service name for Docker
#             # proxy_set_header Host $host;
#             # proxy_set_header X-Real-IP $remote_addr;
#             # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             # proxy_set_header X-Forwarded-Proto $scheme;
#             # add_header X-CSE356 "66d3cdba07c8cc85484644a4";    #if the header above doesn't work, uncomment this
#         }

#     access_log off;  
#     error_log /var/log/nginx/error.log error;  
#     sendfile off;  
#     client_max_body_size 200m;  
# }

upstream flask_app {
    server 127.0.0.1:5000;  # Use localhost since both are using host networking
}

# HTTP Server Block: Redirects all traffic to HTTPS
server {
    listen 80 default_server;
    server_name tim.cse356.compas.cs.stonybrook.edu;

    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS Server Block
server {
    listen 443 ssl;
    server_name tim.cse356.compas.cs.stonybrook.edu;
    add_header X-CSE356 "66d3cdba07c8cc85484644a4"; 

    # SSL Certificates (replace with your actual paths)
    ssl_certificate /etc/letsencrypt/live/tim.cse356.compas.cs.stonybrook.edu/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tim.cse356.compas.cs.stonybrook.edu/privkey.pem;


    # Main location block for Flask app
    location / {
        proxy_pass http://flask_app;  # Use the service name for Docker
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Location for media files
    location /media/ {
        alias /media/;
    }

    location /p/ {
        alias /usr/share/nginx/html/media/;
    }

    # Logging and client size limits
    access_log off;
    error_log /var/log/nginx/error.log error;
    sendfile off;
    client_max_body_size 200m;
}

